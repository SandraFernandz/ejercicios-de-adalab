{"ast":null,"code":"// Fichero src/services/api.js\nconst callToApi = searchName => {\n  // Recibimos por parámetros searchName, que nos lo pasan desde App dentro del useEffect\n  // Llamamos al fetch interpolando la URL del API más el nombre buscado\n  return fetch(`https://swapi.dev/api/people/?search=${searchName}`).then(response => response.json()).then(response => {\n    // La respuesta del API es un objeto que dentro tiene la propiedad results que es un array\n    // Recorremos el array results obteniendo solo el nombre\n    // Esto lo hacemos para limpiar la respuesta del API antes de devolverla al componente App\n    // Esto es opcional pero recomendado\n    const result = response.results.map(character => {\n      return {\n        name: character.name\n      };\n    }); // Retornamos los resultados del API al componente App\n\n    return result;\n  });\n};\n\nexport default callToApi;","map":{"version":3,"sources":["/Users/sanfer/Desktop/GitHub ADALAB/ejercicios-de-adalab/Módulo03/Mod03-Lec1-Ejercicios/Mod03-L05/Mod03-L05-01Ejemplo-Api-LEIA/src/services/api.js"],"names":["callToApi","searchName","fetch","then","response","json","result","results","map","character","name"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAIC,UAAD,IAAgB;AAChC;AACA;AACA,SAAOC,KAAK,CAAE,wCAAuCD,UAAW,EAApD,CAAL,CACJE,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEC,QAAD,IAAc;AAClB;AACA;AACA;AACA;AACA,UAAME,MAAM,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAsBC,SAAD,IAAe;AACjD,aAAO;AACLC,QAAAA,IAAI,EAAED,SAAS,CAACC;AADX,OAAP;AAGD,KAJc,CAAf,CALkB,CAUlB;;AACA,WAAOJ,MAAP;AACD,GAdI,CAAP;AAeD,CAlBD;;AAoBA,eAAeN,SAAf","sourcesContent":["// Fichero src/services/api.js\nconst callToApi = (searchName) => {\n  // Recibimos por parámetros searchName, que nos lo pasan desde App dentro del useEffect\n  // Llamamos al fetch interpolando la URL del API más el nombre buscado\n  return fetch(`https://swapi.dev/api/people/?search=${searchName}`)\n    .then((response) => response.json())\n    .then((response) => {\n      // La respuesta del API es un objeto que dentro tiene la propiedad results que es un array\n      // Recorremos el array results obteniendo solo el nombre\n      // Esto lo hacemos para limpiar la respuesta del API antes de devolverla al componente App\n      // Esto es opcional pero recomendado\n      const result = response.results.map((character) => {\n        return {\n          name: character.name,\n        };\n      });\n      // Retornamos los resultados del API al componente App\n      return result;\n    });\n};\n\nexport default callToApi;\n"]},"metadata":{},"sourceType":"module"}