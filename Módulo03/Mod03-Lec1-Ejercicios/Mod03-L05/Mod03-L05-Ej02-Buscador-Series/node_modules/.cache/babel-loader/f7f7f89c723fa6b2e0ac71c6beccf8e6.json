{"ast":null,"code":"var _jsxFileName = \"/Users/sanfer/Desktop/GitHub ADALAB/ejercicios-de-adalab/Mo\\u0301dulo03/Mod03-Lec1-Ejercicios/Mod03-L05/Mod03-L05-Ej02-Buscador-Series/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.scss';\nimport { useEffect, useState } from 'react';\nimport callToApi from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Creamos series para guardar las series respondidas por el API, eso será un array vacío\n  const [series, setSeries] = useState([]); // Creamos searchSeries para gestionar el input de búsqueda, por eso un string vacío\n\n  const [searchSeries, setSearchSeries] = useState(''); //useEffect\n\n  useEffect(() => {\n    // Llamamos API pasando por parámetros el searchSeries\n    callToApi(searchSeries).then(response => {\n      // Cuando la API responde, guardamos series en el estado\n      setSeries(response);\n    });\n  }, [searchSeries]); //Eventos\n\n  const handleSeries = ev => {\n    // Cuando la usuaria cambia el input guardamos el valor en el estado\n    setSearchSeries(ev.target.value);\n  }; //Renderizado\n\n\n  const renderSeries = () => {\n    // Pintamos el listado de personajes respondido por el API\n    return series.map((character, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Nombre \", series.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Buscador de Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"series\",\n        children: \"Busca el nombre de tu serie favorita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: searchSeries,\n        onChange: handleSeries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tu serie favorita es \", searchSeries]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderSeries()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"siQUNxUzeGsmfk3oXL98/EHT4zA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sanfer/Desktop/GitHub ADALAB/ejercicios-de-adalab/Módulo03/Mod03-Lec1-Ejercicios/Mod03-L05/Mod03-L05-Ej02-Buscador-Series/src/components/App.js"],"names":["useEffect","useState","callToApi","App","series","setSeries","searchSeries","setSearchSeries","then","response","handleSeries","ev","target","value","renderSeries","map","character","index","name"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CAFgB,CAGhB;;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAJgB,CAMhB;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,SAAS,CAACI,YAAD,CAAT,CAAwBE,IAAxB,CAA8BC,QAAD,IAAc;AACzC;AACAJ,MAAAA,SAAS,CAACI,QAAD,CAAT;AACD,KAHD;AAID,GANQ,EAMN,CAACH,YAAD,CANM,CAAT,CARgB,CAgBhB;;AAEA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3B;AACAJ,IAAAA,eAAe,CAACI,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAf;AACD,GAHD,CAlBgB,CAuBhB;;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB;AACA,WAAOV,MAAM,CAACW,GAAP,CAAW,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACtC,0BAAO;AAAA,8BAAwBb,MAAM,CAACc,IAA/B;AAAA,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAEX,YAJT;AAKE,QAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAA,0CAA0BJ,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA,gBAAKQ,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjDD;;GAAMX,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import '../styles/App.scss';\nimport { useEffect, useState } from 'react';\nimport callToApi from '../services/api';\n\nconst App = () => {\n  // Creamos series para guardar las series respondidas por el API, eso será un array vacío\n  const [series, setSeries] = useState([]);\n  // Creamos searchSeries para gestionar el input de búsqueda, por eso un string vacío\n  const [searchSeries, setSearchSeries] = useState('');\n\n  //useEffect\n\n  useEffect(() => {\n    // Llamamos API pasando por parámetros el searchSeries\n    callToApi(searchSeries).then((response) => {\n      // Cuando la API responde, guardamos series en el estado\n      setSeries(response);\n    });\n  }, [searchSeries]);\n\n  //Eventos\n\n  const handleSeries = (ev) => {\n    // Cuando la usuaria cambia el input guardamos el valor en el estado\n    setSearchSeries(ev.target.value);\n  };\n\n  //Renderizado\n\n  const renderSeries = () => {\n    // Pintamos el listado de personajes respondido por el API\n    return series.map((character, index) => {\n      return <li key={index}>Nombre {series.name}</li>;\n    });\n  };\n\n  return (\n    <div>\n      <h1>Buscador de Series</h1>\n      <form action=\"\">\n        <label htmlFor=\"series\">Busca el nombre de tu serie favorita</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={searchSeries}\n          onChange={handleSeries}\n        />\n      </form>\n      <h2>Tu serie favorita es {searchSeries}</h2>\n      <ul>{renderSeries()}</ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}