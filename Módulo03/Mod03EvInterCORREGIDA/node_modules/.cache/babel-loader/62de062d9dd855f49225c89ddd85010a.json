{"ast":null,"code":"var _jsxFileName = \"/Users/sanfer/Desktop/GitHub ADALAB/ejercicios-de-adalab/Mo\\u0301dulo03/Mod03-Lec1-Ejercicios/Mod03-L04/Mod03-L04.1-Ej02-ArrayDeObjetos/src/components/App.js\";\nimport '../styles/App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const tasks = [{\n    task: 'Comprar harina, jamón y pan rallado',\n    completed: true\n  }, {\n    task: 'Hacer croquetas ricas',\n    completed: true\n  }, {\n    task: 'Ir a la puerta de un gimnasio',\n    completed: false\n  }, {\n    task: 'Comerme las croquetas mirando a la gente que entra en el gimnasio',\n    completed: false\n  }];\n\n  const handleClick = ev => {\n    const listClicked = ev.currentTarget.id;\n    console.log(listClicked); //tarea[id].completed = !tarea[id].completed;\n  }; //tarea representa cada elemento del array que tiene las propiedades task y completed, y podría ser pepino\n\n\n  const renderTasks = () => {\n    return tasks.map((tarea, index) => {\n      //faltaría tachar la lista con método de string\n      // if (tarea.completed === true) {\n      //   //función original String.strike();\n      //   tasks.task.strike();\n      // }\n      //console.log(tarea);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: tarea.completed ? 'lineThrough' : '',\n        onClick: handleClick,\n        id: index,\n        children: [\"Tengo que \", tarea.task]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de To Do\\xB4s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderTasks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sanfer/Desktop/GitHub ADALAB/ejercicios-de-adalab/Módulo03/Mod03-Lec1-Ejercicios/Mod03-L04/Mod03-L04.1-Ej02-ArrayDeObjetos/src/components/App.js"],"names":["App","tasks","task","completed","handleClick","ev","listClicked","currentTarget","id","console","log","renderTasks","map","tarea","index"],"mappings":";AAAA,OAAO,oBAAP;;;AAEA,MAAMA,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,IAAI,EAAE,qCAAR;AAA+CC,IAAAA,SAAS,EAAE;AAA1D,GADY,EAEZ;AAAED,IAAAA,IAAI,EAAE,uBAAR;AAAiCC,IAAAA,SAAS,EAAE;AAA5C,GAFY,EAGZ;AAAED,IAAAA,IAAI,EAAE,+BAAR;AAAyCC,IAAAA,SAAS,EAAE;AAApD,GAHY,EAIZ;AACED,IAAAA,IAAI,EAAE,mEADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAJY,CAAd;;AAUA,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AAC1B,UAAMC,WAAW,GAAGD,EAAE,CAACE,aAAH,CAAiBC,EAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAF0B,CAG1B;AACD,GAJD,CAXgB,CAgBhB;;;AACA,QAAMK,WAAW,GAAG,MAAM;AACxB,WAAOV,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC;AACA;AACA;AACA;AACA;AAEA;AACA,0BACE;AACE,QAAA,SAAS,EAAED,KAAK,CAACV,SAAN,GAAkB,aAAlB,GAAkC,EAD/C;AAGE,QAAA,OAAO,EAAEC,WAHX;AAIE,QAAA,EAAE,EAAEU,KAJN;AAAA,iCAMaD,KAAK,CAACX,IANnB;AAAA,SAEOY,KAFP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAlBM,CAAP;AAmBD,GApBD;;AAsBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKH,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7CD;;KAAMX,G;AA+CN,eAAeA,GAAf","sourcesContent":["import '../styles/App.scss';\n\nconst App = () => {\n  const tasks = [\n    { task: 'Comprar harina, jamón y pan rallado', completed: true },\n    { task: 'Hacer croquetas ricas', completed: true },\n    { task: 'Ir a la puerta de un gimnasio', completed: false },\n    {\n      task: 'Comerme las croquetas mirando a la gente que entra en el gimnasio',\n      completed: false,\n    },\n  ];\n\n  const handleClick = (ev) => {\n    const listClicked = ev.currentTarget.id;\n    console.log(listClicked);\n    //tarea[id].completed = !tarea[id].completed;\n  };\n  //tarea representa cada elemento del array que tiene las propiedades task y completed, y podría ser pepino\n  const renderTasks = () => {\n    return tasks.map((tarea, index) => {\n      //faltaría tachar la lista con método de string\n      // if (tarea.completed === true) {\n      //   //función original String.strike();\n      //   tasks.task.strike();\n      // }\n\n      //console.log(tarea);\n      return (\n        <li\n          className={tarea.completed ? 'lineThrough' : ''}\n          key={index}\n          onClick={handleClick}\n          id={index}\n        >\n          Tengo que {tarea.task}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Lista de To Do´s</h1>\n      <ul>{renderTasks()}</ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}